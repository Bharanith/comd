//reverse each line in file
%{
#include<stdio.h>
#include<string.h>
int i,j;
char temp;
%}
%%
[a-zA-Z ]+\n     {
i=0;
j=strlen(yytext)-1;
while(i<j)
{
temp=yytext[i];
yytext[i]=yytext[j];
yytext[j]=temp;
i++;
j--;
}
fprintf(yyout,  "%s", yytext);
}
%%
int yywrap()
{
return 1;
}

int main(){
extern FILE *yyin,*yyout;
yyin=fopen("i.txt","r");
yyout=fopen("o.txt","w");
yylex();
}
//matches one or more alphanumeric

%option noyywrap
%{

#include <stdio.h>

#include <string.h>



%}



%%

[a-zA-Z0-9]+  printf("%s\n",yytext);

.|\n ;

%%



int main()

{

        FILE *fp = fopen("ipb.txt", "r");

        if(fp)

                yyin = fp;

        printf("output : \n");

        yylex();

        return 0;

}
//capital letters for input string
%option noyywrap





%{

#include <stdio.h>

#include <string.h>





%}





%%

[A-Z]+  printf("%s ",yytext);

[a-z]*  ;

.       ;

\n      printf("\n");

%%





int main()

{

        FILE *fp = fopen("ipd.txt", "r");

        if(fp)

                yyin = fp;

        printf("output : \n");

        yylex();

}
//identify tokens for input
%option noyywrap



%{

#include <stdio.h>

#include <string.h>



%}



%%



[a-zA-Z][a-zA-Z0-9]*    printf("Identifier : %s\n",yytext);

[+][+]  printf("Operator: ++\n");

[+\-*/=]        printf("Operator : %s\n",yytext);

[ \t\n] ;

.       ;



%%



int main()

{

        FILE *fp = fopen("input_2.txt", "r");

        if(fp)

                yyin = fp;


        yylex();

}
//banana string
%option noyywrap

%{

#include <stdio.h>

#include <string.h>

%}

%%

[b][a][n][a]?$  printf("%s\n",yytext);

[b][a][n][a][n][a]?$    printf("%s\n",yytext);

.        ;

\n      ;

%%



int main()

{

        FILE *fp = fopen("ipc.txt", "r");

        if(fp)

                yyin = fp;

        printf("output : \n");

        yylex();

}

